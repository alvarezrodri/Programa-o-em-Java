package application;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

import model.entites.Reservation;

public class Program {

	public static void main(String[] args) throws ParseException { //meu metodo mains pode lan√ßar um exce~]ao do tipo parseException
		// TODO Auto-generated method stub

		Scanner sc = new Scanner(System.in);
		SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
		
		System.out.print("Room number: ");
		int number = sc.nextInt();
		
		System.out.print("Check-in date (dd/MM/yyyy): ");  //data de entrada
		Date checkIn = sdf.parse(sc.next());
		
		System.out.print("Check-out date (dd/MM/yyyy): ");  //data de entrada
		Date checkOut = sdf.parse(sc.next());
		
		if(!checkOut.after(checkIn)) {		//testa se uma data, depois da outra
			System.out.println("Error in reservation: Check-out date must be after check-in date");
		}
		else {
			Reservation reservation = new Reservation(number, checkIn, checkOut);
			System.out.println("Reservation: "+ reservation);
			
			System.out.println();
			System.out.println("Enter data updated the reservation: ");
			System.out.print("Check-in date (dd/MM/yyyy): ");  //data de entrada
			checkIn = sdf.parse(sc.next());
			System.out.print("Check-out date (dd/MM/yyyy): ");  //data de entrada
			checkOut = sdf.parse(sc.next());
			
			Date now = new Date();
			if(checkIn.before(now) || checkOut.before(now));{ 	//se a data de entrada for anterior que now ou data de saida for anterios que now
				System.out.println("Error in reservation: Reservation dates for update must be future dates ");
			}
			else {
				System.out.println("Error in reservation: Check-out date must be after check-in date");
			}
			
			reservation.updatedDates(checkIn, checkOut);  //responsavel por atualizar  as datas
			System.out.println("Reservation: "+ reservation);
		}
		
		sc.close();
	}

}
